import ida_bytes
from binascii import hexlify

def main():
    # generated by create_patch.py
    # test_tamper.exe
    patches = [(5368713922L, '\xeb\x05'), (5368713991L, '\x90\x90')]
    # patches = [(5368713887L, '\x90\x90\x90'), (5368713890L, '\x90\x90\x90'), (5368714371L, '\x90'), (5368713914L, '\x90\x90'), (5368713893L, '\x90\x90\x90'), (5368714256L, '\x90'), (5368713896L, '\x90\x90\x90\x90\x90'), (5368713910L, '\x90\x90\x90\x90'), (5368713901L, '\x90\x90\x90'), (5368713916L, '\xeb\x05'), (5368713904L, '\x90\x90\x90'), (5368713907L, '\x90\x90\x90'), (5368713878L, '\x90\x90\x90\x90'), (5368713882L, '\x90\x90'), (5368713979L, '\x90\x90\x90'), (5368713884L, '\x90\x90\x90')]

    # test_medium.exe
    # patches = [(5368713486L, '\xeb\x05'), (5368714020L, '\x90\x90'), (5368713951L, '\xeb\x05'), (5368713555L, '\x90\x90'), (5368713833L, '\x90\x90\x90\x90\x90\x90')]

    # test_large_debug.exe
    # patches = [(5368714301L, '\xeb\x05'), (5368714826L, '\xeb\x05'), (5368713575L, '\xeb\x05'), (5368714370L, '\x90\x90\x90\x90\x90\x90'), (5368713348L, '\x90\x90\x90\x90\x90\x90'), (5368714893L, '\x90\x90\x90\x90\x90\x90'), (140724005432014L, '\x90\x90'), (5368713425L, '\x90\x90\x90\x90\x90\x90'), (5368713644L, '\x90\x90'), (5368714678L, '\x90\x90\x90\x90\x90\x90'), (140724005415877L, '\xeb\x12')]
    for addr, val in patches:
        print('patching {:#x} with {}'.format(addr, hexlify(val)))
        ida_bytes.patch_bytes(addr, val)


if __name__ == '__main__':
    main()